{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","Title","Plot","Poster","imdbID","className","src","alt","href","MoviesList","movies","map","movie","key","FindMovie","addMovie","useState","value","setValue","setMovie","test","setTest","onFindMovie","a","fetch","then","response","json","catch","er","result","htmlFor","type","id","placeholder","Error","onChange","event","target","onClick","App","length","film","prevMovies","every","item","ReactDOM","render","document","getElementById"],"mappings":"6UAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,YAFuB,MAEhB,GAFgB,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,OAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAI,qCAAgCJ,IAAvC,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAMR,QAAYQ,S,6BCLjC,IAAME,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACfC,mBAAS,IADM,mBAClCC,EADkC,KAC3BC,EAD2B,OAEfF,mBAAS,IAFM,mBAElCJ,EAFkC,KAE3BO,EAF2B,OAGjBH,oBAAS,GAHQ,mBAGlCI,EAHkC,KAG5BC,EAH4B,KAYnCC,EAAW,uCAAG,4BAAAC,EAAA,sECjBbC,MAAM,6CAAD,ODkBoBP,ICjB7BQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAE,MAAI,WDeK,OACZC,EADY,OAGlBX,EAASW,GACTT,GAAQ,GAJU,2CAAH,qDAOjB,OACE,oCACE,0BAAMhB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ0B,QAAQ,eAAjC,eAIA,yBAAK1B,UAAU,WACb,2BACE2B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7B,UAAS,gBAAWO,EAAMuB,MAAQ,kBAAoB,IACtDlB,MAAOA,EACPmB,SAAU,SAACC,GACTnB,EAASmB,EAAMC,OAAOrB,WAK3BL,EAAMuB,OACL,uBAAG9B,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE2B,KAAK,SACL3B,UAAU,kBACVkC,QAASjB,GAHX,iBASF,yBAAKjB,UAAU,WACb,4BACE2B,KAAK,SACL3B,UAAU,oBACVkC,QAASnB,GAzDF,WACjBL,EAASH,GACTM,EAAS,IACTC,EAAS,IACTE,GAAQ,KAkDA,sBAWK,KAAVT,IAAiBA,EAAMuB,OACtB,yBAAK9B,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcO,ME1EZ4B,EAAM,WAAO,IAAD,EACIxB,mBAAS,IADb,mBAChBN,EADgB,KACRS,EADQ,KAavB,OACE,yBAAKd,UAAU,QACb,yBAAKA,UAAU,gBACZK,EAAO+B,OACN,kBAAC,EAAD,CAAY/B,OAAQA,IAEpB,2CAKJ,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWU,SAtBA,SAAC2B,GAChBvB,GAAS,SAACwB,GACR,OAAIA,EAAWC,OAAM,SAAAC,GAAI,OAAIA,EAAKzC,SAAWsC,EAAKtC,UAC1C,GAAN,mBAAWuC,GAAX,CAAuBD,IAGlBC,WCTbG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d40dddca.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Plot = '',\n  Poster,\n  imdbID,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Plot: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState('');\n  const [test, setTest] = useState(false);\n\n  const onAddMovie = () => {\n    addMovie(movie);\n    setValue('');\n    setMovie('');\n    setTest(false);\n  };\n\n  const onFindMovie = async() => {\n    const result = await getMovie(value);\n\n    setMovie(result);\n    setTest(true);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${movie.Error ? 'input is-danger' : ''}`}\n              value={value}\n              onChange={(event) => {\n                setValue(event.target.value);\n              }}\n            />\n          </div>\n\n          {movie.Error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={test && (onAddMovie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie !== '' && !movie.Error && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","export function getMovie(title) {\n  return fetch(`http://www.omdbapi.com/?apikey=d78ecd1c&t=${title}`)\n    .then(response => response.json())\n    .catch(er => 'error');\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState([]);\n\n  const addMovie = (film) => {\n    setMovie((prevMovies) => {\n      if (prevMovies.every(item => item.imdbID !== film.imdbID)) {\n        return [...prevMovies, film];\n      }\n\n      return prevMovies;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies.length ? (\n          <MoviesList movies={movies} />\n        ) : (\n          <div>\n            No Movies\n          </div>\n        )}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}